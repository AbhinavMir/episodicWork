/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/MmoCv8akTcs
 */

"use client";

import Link from "next/link";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { supabase } from "@/utils/supabase/server";
import { useState } from "react";
import Image from "next/image";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export const error = {
  title: "Invalid Credentials",
  description: "Either your password or email was incorrect!",
};

export const success = {
  title: "Success",
  description: "You have successfully logged in!",
};

export function AuthIn() {
  const [name, setName] = useState("");
  const [signupEmail, setSignupEmail] = useState("");
  const [signupPassword, setSignupPassword] = useState("");
  const [confirmPassword, setConfirmPassword] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  async function signInWithEmail() {
    const { data, error } = await supabase.auth.signInWithPassword({
      email: email,
      password: password,
    });

    if (error) {
      toast.error(
        "Invalid Credentials: Either your password or email was incorrect!"
      );
    } else {
      toast.success("Success: You have successfully logged in!");
    }
  }

  async function signUp() {
    const { data, error } = await supabase.auth.signUp({
      email: signupEmail,
      password: signupPassword,
    });

    if (error) {
      toast.error("Signup failed: " + error.message);
    } else {
      toast.success("Signup successful! Check your email to confirm.");
    }
  }

  async function resetPassword() {
    const { data, error } = await supabase.auth.resetPasswordForEmail(email);

    if (error) {
      toast.error("Reset password failed: " + error.message);
    } else {
      toast.success("Reset password successful! Check your email to confirm.");
    }
  }

  return (
    <div>
      <div className="flex flex-row items-center justify-center text-center text-4xl pt-10">
        <Image src="/logo.png" alt="" width={100} height={100} />
        <p className="text-2xl">Write your magnum opus, episodically</p>
      </div>
      <div className="flex flex-col items-center justify-center min-h-screen py-12 bg-black sm:py-24 md:grid md:gap-0 md:grid-cols-2 xl:min-h-screen">
        {" "}
        <div className="flex flex-col items-center justify-center p-6 sm:p-10">
          <div className="space-y-6">
            <div className="space-y-2 text-center">
              <h1 className="text-3xl font-bold">Welcome back!</h1>
            </div>
            <div className="space-y-4">
              <div className="space-y-2">
                <Input
                  id="email-or-username"
                  placeholder="Enter your Email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                />
                <Input
                  id="password"
                  value={password}
                  placeholder="Password"
                  onChange={(e) => setPassword(e.target.value)}
                  required
                  type="password"
                />
                <Button
                  className="w-full outline"
                  onClick={signInWithEmail}
                  type="button"
                >
                  Login
                </Button>

                <div className="space-y-4">
                  <Button className="w-full" onClick={resetPassword}>
                    Reset Password
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className="flex flex-col items-center justify-center p-6 sm:p-10">
          <div className="space-y-6">
            <div className="space-y-2 text-center">
              <h1 className="text-3xl font-bold">Create an account</h1>
            </div>
            <div className="space-y-4">
              <Input
                id="name"
                placeholder="What's your name, writer?"
                required
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
              <Input
                id="email"
                placeholder="m@example.com"
                required
                type="email"
                value={signupEmail}
                onChange={(e) => setSignupEmail(e.target.value)}
              />
              <Input
                id="password"
                required
                placeholder="Password"
                type="password"
                value={signupPassword}
                onChange={(e) => setSignupPassword(e.target.value)}
              />
              <Input
                id="confirm-password"
                required
                placeholder="Confirm password"
                type="password"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
              />
              <Button className="w-full" onClick={signUp}>
                Sign up
              </Button>
            </div>
          </div>
        </div>
        <ToastContainer position="bottom-center" autoClose={5000} />
      </div>
    </div>
  );
}
